<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chs.wechat.spy.mybatis.mapper.ChatRoomsMapper">
  <resultMap id="BaseResultMap" type="chs.wechat.spy.mybatis.model.ChatRooms">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="room_id" jdbcType="VARCHAR" property="room_id" />
    <result column="room_code" jdbcType="VARCHAR" property="room_code" />
    <result column="room_nick" jdbcType="VARCHAR" property="room_nick" />
    <result column="room_owner" jdbcType="VARCHAR" property="room_owner" />
    <result column="member_count" jdbcType="INTEGER" property="member_count" />
    <result column="is_owner" jdbcType="BIT" property="is_owner" />
    <result column="small_head_url" jdbcType="VARCHAR" property="small_head_url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="chs.wechat.spy.mybatis.model.ChatRooms">
    <result column="small_head" jdbcType="LONGVARBINARY" property="small_head" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, room_id, room_code, room_nick, room_owner, member_count, is_owner, small_head_url
  </sql>
  <sql id="Blob_Column_List">
    small_head
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chat_rooms
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chat_rooms
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    insert into chat_rooms (id, user_id, room_id, 
      room_code, room_nick, room_owner, 
      member_count, is_owner, small_head_url, 
      small_head)
    values (#{id,jdbcType=VARCHAR}, #{user_id,jdbcType=VARCHAR}, #{room_id,jdbcType=VARCHAR}, 
      #{room_code,jdbcType=VARCHAR}, #{room_nick,jdbcType=VARCHAR}, #{room_owner,jdbcType=VARCHAR}, 
      #{member_count,jdbcType=INTEGER}, #{is_owner,jdbcType=BIT}, #{small_head_url,jdbcType=VARCHAR}, 
      #{small_head,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    insert into chat_rooms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="room_id != null">
        room_id,
      </if>
      <if test="room_code != null">
        room_code,
      </if>
      <if test="room_nick != null">
        room_nick,
      </if>
      <if test="room_owner != null">
        room_owner,
      </if>
      <if test="member_count != null">
        member_count,
      </if>
      <if test="is_owner != null">
        is_owner,
      </if>
      <if test="small_head_url != null">
        small_head_url,
      </if>
      <if test="small_head != null">
        small_head,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="room_id != null">
        #{room_id,jdbcType=VARCHAR},
      </if>
      <if test="room_code != null">
        #{room_code,jdbcType=VARCHAR},
      </if>
      <if test="room_nick != null">
        #{room_nick,jdbcType=VARCHAR},
      </if>
      <if test="room_owner != null">
        #{room_owner,jdbcType=VARCHAR},
      </if>
      <if test="member_count != null">
        #{member_count,jdbcType=INTEGER},
      </if>
      <if test="is_owner != null">
        #{is_owner,jdbcType=BIT},
      </if>
      <if test="small_head_url != null">
        #{small_head_url,jdbcType=VARCHAR},
      </if>
      <if test="small_head != null">
        #{small_head,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    update chat_rooms
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="room_id != null">
        room_id = #{room_id,jdbcType=VARCHAR},
      </if>
      <if test="room_code != null">
        room_code = #{room_code,jdbcType=VARCHAR},
      </if>
      <if test="room_nick != null">
        room_nick = #{room_nick,jdbcType=VARCHAR},
      </if>
      <if test="room_owner != null">
        room_owner = #{room_owner,jdbcType=VARCHAR},
      </if>
      <if test="member_count != null">
        member_count = #{member_count,jdbcType=INTEGER},
      </if>
      <if test="is_owner != null">
        is_owner = #{is_owner,jdbcType=BIT},
      </if>
      <if test="small_head_url != null">
        small_head_url = #{small_head_url,jdbcType=VARCHAR},
      </if>
      <if test="small_head != null">
        small_head = #{small_head,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    update chat_rooms
    set user_id = #{user_id,jdbcType=VARCHAR},
      room_id = #{room_id,jdbcType=VARCHAR},
      room_code = #{room_code,jdbcType=VARCHAR},
      room_nick = #{room_nick,jdbcType=VARCHAR},
      room_owner = #{room_owner,jdbcType=VARCHAR},
      member_count = #{member_count,jdbcType=INTEGER},
      is_owner = #{is_owner,jdbcType=BIT},
      small_head_url = #{small_head_url,jdbcType=VARCHAR},
      small_head = #{small_head,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    update chat_rooms
    set user_id = #{user_id,jdbcType=VARCHAR},
      room_id = #{room_id,jdbcType=VARCHAR},
      room_code = #{room_code,jdbcType=VARCHAR},
      room_nick = #{room_nick,jdbcType=VARCHAR},
      room_owner = #{room_owner,jdbcType=VARCHAR},
      member_count = #{member_count,jdbcType=INTEGER},
      is_owner = #{is_owner,jdbcType=BIT},
      small_head_url = #{small_head_url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="chs.wechat.spy.mybatis.model.ChatRooms">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="room_id" jdbcType="VARCHAR" property="room_id" />
    <result column="room_code" jdbcType="VARCHAR" property="room_code" />
    <result column="room_nick" jdbcType="VARCHAR" property="room_nick" />
    <result column="room_owner" jdbcType="VARCHAR" property="room_owner" />
    <result column="member_count" jdbcType="INTEGER" property="member_count" />
    <result column="is_owner" jdbcType="BIT" property="is_owner" />
    <result column="small_head_url" jdbcType="VARCHAR" property="small_head_url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="chs.wechat.spy.mybatis.model.ChatRooms">
    <result column="small_head" jdbcType="LONGVARBINARY" property="small_head" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, room_id, room_code, room_nick, room_owner, member_count, is_owner, small_head_url
  </sql>
  <sql id="Blob_Column_List">
    small_head
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chat_rooms
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chat_rooms
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    insert into chat_rooms (id, user_id, room_id, 
      room_code, room_nick, room_owner, 
      member_count, is_owner, small_head_url, 
      small_head)
    values (#{id,jdbcType=VARCHAR}, #{user_id,jdbcType=VARCHAR}, #{room_id,jdbcType=VARCHAR}, 
      #{room_code,jdbcType=VARCHAR}, #{room_nick,jdbcType=VARCHAR}, #{room_owner,jdbcType=VARCHAR}, 
      #{member_count,jdbcType=INTEGER}, #{is_owner,jdbcType=BIT}, #{small_head_url,jdbcType=VARCHAR}, 
      #{small_head,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    insert into chat_rooms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="room_id != null">
        room_id,
      </if>
      <if test="room_code != null">
        room_code,
      </if>
      <if test="room_nick != null">
        room_nick,
      </if>
      <if test="room_owner != null">
        room_owner,
      </if>
      <if test="member_count != null">
        member_count,
      </if>
      <if test="is_owner != null">
        is_owner,
      </if>
      <if test="small_head_url != null">
        small_head_url,
      </if>
      <if test="small_head != null">
        small_head,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="room_id != null">
        #{room_id,jdbcType=VARCHAR},
      </if>
      <if test="room_code != null">
        #{room_code,jdbcType=VARCHAR},
      </if>
      <if test="room_nick != null">
        #{room_nick,jdbcType=VARCHAR},
      </if>
      <if test="room_owner != null">
        #{room_owner,jdbcType=VARCHAR},
      </if>
      <if test="member_count != null">
        #{member_count,jdbcType=INTEGER},
      </if>
      <if test="is_owner != null">
        #{is_owner,jdbcType=BIT},
      </if>
      <if test="small_head_url != null">
        #{small_head_url,jdbcType=VARCHAR},
      </if>
      <if test="small_head != null">
        #{small_head,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    update chat_rooms
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="room_id != null">
        room_id = #{room_id,jdbcType=VARCHAR},
      </if>
      <if test="room_code != null">
        room_code = #{room_code,jdbcType=VARCHAR},
      </if>
      <if test="room_nick != null">
        room_nick = #{room_nick,jdbcType=VARCHAR},
      </if>
      <if test="room_owner != null">
        room_owner = #{room_owner,jdbcType=VARCHAR},
      </if>
      <if test="member_count != null">
        member_count = #{member_count,jdbcType=INTEGER},
      </if>
      <if test="is_owner != null">
        is_owner = #{is_owner,jdbcType=BIT},
      </if>
      <if test="small_head_url != null">
        small_head_url = #{small_head_url,jdbcType=VARCHAR},
      </if>
      <if test="small_head != null">
        small_head = #{small_head,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    update chat_rooms
    set user_id = #{user_id,jdbcType=VARCHAR},
      room_id = #{room_id,jdbcType=VARCHAR},
      room_code = #{room_code,jdbcType=VARCHAR},
      room_nick = #{room_nick,jdbcType=VARCHAR},
      room_owner = #{room_owner,jdbcType=VARCHAR},
      member_count = #{member_count,jdbcType=INTEGER},
      is_owner = #{is_owner,jdbcType=BIT},
      small_head_url = #{small_head_url,jdbcType=VARCHAR},
      small_head = #{small_head,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="chs.wechat.spy.mybatis.model.ChatRooms">
    update chat_rooms
    set user_id = #{user_id,jdbcType=VARCHAR},
      room_id = #{room_id,jdbcType=VARCHAR},
      room_code = #{room_code,jdbcType=VARCHAR},
      room_nick = #{room_nick,jdbcType=VARCHAR},
      room_owner = #{room_owner,jdbcType=VARCHAR},
      member_count = #{member_count,jdbcType=INTEGER},
      is_owner = #{is_owner,jdbcType=BIT},
      small_head_url = #{small_head_url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>